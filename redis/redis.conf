# 设置 redis 连接密码
requirepass 123321

# 数据持久化 - 开始
# 开启 AOF 持久化
appendonly yes

# AOF文件刷新的方式
# always 每提交一个修改命令都调用fsync刷新到AOF文件，非常非常慢，但也非常安全。
# everysec 每秒钟都调用fsync刷新到AOF文件，很快，但可能会丢失一秒以内的数据。
# no 依靠OS进行刷新，redis不主动刷新AOF，这样最快，但安全性就差。
appendfsync everysec

# 随着持久化的不断增多，AOF文件会越来越大，这个时候就需要AOF文件重写了。AOF文件重写
# 如果该参数取值为yes，那么在重写AOF文件时能提升性能，但可能在重写AOF文件时丢失数据。
# 如果取值为no，则不会丢失数据，但较取值为yes的性能可能会降低。默认取值是no。
no-appendfsync-on-rewrite no

# AOF文件重写
# 参数能指定重写的条件，默认是100，
# 即如果当前的AOF文件比上次执行重写时的文件大一倍时会再次触发重写操作。
# 如果该参数取值为0，则不会触发重写操作。
auto-aof-rewrite-percentage 100

# AOF文件重写
# 指定触发重写时AOF文件的大小，默认是64MB。
auto-aof-rewrite-min-size 64mb

# auto-aof-rewrite-percentage 和 auto-aof-rewrite-min-size 两个参数指定的重写条件是“And”的关系。
# 即只有当同时满足这两个条件时才会触发重写操作。

# 数据持久化 - 结束


# Redis key 过期事件监听
notify-keyspace-events Ex
